# Cloud API Configuration via Environment Variables
# Copy this file to .env and fill in your actual values

# =============================================================================
# Server Configuration
# =============================================================================
SERVER_HOST=0.0.0.0
SERVER_PORT=3000

# =============================================================================
# Model Discovery Configuration
# =============================================================================
# URL of the model discovery server
MODEL_DISCOVERY_SERVER_URL=http://51.91.160.170:8080/models

# API key for authenticating with discovered model providers
MODEL_DISCOVERY_API_KEY=REDACTED

# How often to refresh model list (in seconds)
MODEL_DISCOVERY_REFRESH_INTERVAL=300

# Request timeout (in seconds)
MODEL_DISCOVERY_TIMEOUT=5

# =============================================================================
# Logging Configuration
# =============================================================================
# Global log level: trace, debug, info, warn, error
LOG_LEVEL=debug

# Log format: json, compact, pretty
LOG_FORMAT=compact

# Module-specific log levels (optional)
LOG_MODULE_API=debug
LOG_MODULE_SERVICES=debug

# =============================================================================
# DStack Client Configuration
# =============================================================================
DSTACK_CLIENT_URL=http://localhost:8000

# =============================================================================
# Authentication Configuration
# =============================================================================
# Set to true to use mock authentication (development only)
AUTH_MOCK=false

# Set for JWT access token encoding
AUTH_ENCODING_KEY=YOUR_AUTH_ENCODING_KEY

# GitHub OAuth Configuration
# To set up:
# 1. Go to https://github.com/settings/developers
# 2. Create a new OAuth App
# 3. Set Authorization callback URL to: http://your-domain:3000/v1/auth/callback
# 4. Copy Client ID and Client Secret here
GITHUB_CLIENT_ID=YOUR_GITHUB_CLIENT_ID
GITHUB_CLIENT_SECRET=YOUR_GITHUB_CLIENT_SECRET
GITHUB_REDIRECT_URL=http://localhost:3000/v1/auth/callback

# Google OAuth Configuration
# To set up:
# 1. Go to https://console.cloud.google.com/apis/credentials
# 2. Create OAuth 2.0 Client ID
# 3. Add authorized redirect URI: http://your-domain:3000/v1/auth/callback
# 4. Copy Client ID and Client Secret here
GOOGLE_CLIENT_ID=YOUR_GOOGLE_CLIENT_ID.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=YOUR_GOOGLE_CLIENT_SECRET
GOOGLE_REDIRECT_URL=http://localhost:3000/v1/auth/callback

# Admin Configuration
# Comma-separated list of email domains that are granted admin access
# Example: near.ai,admin.org
AUTH_ADMIN_DOMAINS=near.ai

# =============================================================================
# Database Configuration
# =============================================================================
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_NAME=platform_api
DATABASE_USERNAME=postgres
DATABASE_PASSWORD=postgres
DATABASE_MAX_CONNECTIONS=5

# TLS/SSL for remote database connections (e.g., DigitalOcean, AWS RDS)
DATABASE_TLS_ENABLED=false

# Path to custom CA certificate (optional, for databases with custom certs)
# DATABASE_TLS_CA_CERT_PATH=path/to/ca-certificate.crt

# =============================================================================
# Optional: Configuration Loading Mode
# =============================================================================
# Uncomment to explicitly use environment variables instead of config.yaml
# USE_ENV_CONFIG=true

# Or specify a custom config file path
# CONFIG_FILE=config/custom.yaml

